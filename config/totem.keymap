//
//                                                        ▀▀▀▀▀     ▀▀▀▀▀          ▀▀█▀▀
//                                                        ▄▀▀▀▄  ▄  ▄▀▀▀▄  ▄  ▄▀▀▀▄  █  ▄▀▀▀▄
//                                                        █   █  █  █   █  █  █   █  █  █   █
//                                                         ▀▀▀   █   ▀▀▀   █   ▀▀▀   ▀   ▀▀▀
//                                                               █      ▄▄▄█▄▄▄    █   █  
//                                                               ▀      █  █  █     █▄█
//                                                             ▀▀▀▀▀    █  █  █      ▀
//                                                                      ▀  ▀  ▀
//
// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄
       
/*
 * TOTEM 38-KEY LAYOUT - KEY POSITION MAPPING
 * 
 * This mapping is based on the matrix transform in totem.dtsi:
 * Keys are numbered 0-37 from left to right, top to bottom
 * 
 * Physical Layout:
 * ┌─────┬─────┬─────┬─────┬─────┐       ┌─────┬─────┬─────┬─────┬─────┐
 * │  0  │  1  │  2  │  3  │  4  │       │  5  │  6  │  7  │  8  │  9  │
 * ├─────┼─────┼─────┼─────┼─────┤       ├─────┼─────┼─────┼─────┼─────┤
 * │ 10  │ 11  │ 12  │ 13  │ 14  │       │ 15  │ 16  │ 17  │ 18  │ 19  │
 * ├─────┼─────┼─────┼─────┼─────┼─────┐ ┌─────┼─────┼─────┼─────┼─────┼─────┤
 * │ 20  │ 21  │ 22  │ 23  │ 24  │ 25  │ │ 26  │ 27  │ 28  │ 29  │ 30  │ 31  │
 * └─────┴─────┴─────┼─────┼─────┼─────┤ ├─────┼─────┼─────┼─────┴─────┴─────┘
 *                   │ 32  │ 33  │ 34  │ │ 35  │ 36  │ 37  │
 *                   └─────┴─────┴─────┘ └─────┴─────┴─────┘
 * 
 * Matrix Transform (from totem.dtsi):
 * Row 0: RC(0,0) RC(0,1) RC(0,2) RC(0,3) RC(0,4)    RC(0,5) RC(0,6) RC(0,7) RC(0,8) RC(0,9)
 * Row 1: RC(1,0) RC(1,1) RC(1,2) RC(1,3) RC(1,4)    RC(1,5) RC(1,6) RC(1,7) RC(1,8) RC(1,9)
 * Row 2: RC(3,0) RC(2,0) RC(2,1) RC(2,2) RC(2,3) RC(2,4)    RC(2,5) RC(2,6) RC(2,7) RC(2,8) RC(2,9) RC(3,9)
 * Row 3:                         RC(3,2) RC(3,3) RC(3,4)    RC(3,5) RC(3,6) RC(3,7)
 * 
 * This translates to key positions:
 * Row 0: 0, 1, 2, 3, 4,    5, 6, 7, 8, 9
 * Row 1: 10, 11, 12, 13, 14,    15, 16, 17, 18, 19
 * Row 2: 20, 21, 22, 23, 24, 25,    26, 27, 28, 29, 30, 31
 * Row 3:             32, 33, 34,    35, 36, 37
 */

#include <behaviors.dtsi>
#include <dt-bindings/zmk/keys.h>
#include <dt-bindings/zmk/bt.h>
#include <dt-bindings/zmk/outputs.h>

#define MAC 0
#define MAC_BINDINGS 1
#define WINDOWS 2
#define WINDOWS_BINDINGS 3
#define NUM_LAYER   4
#define SYMBOL  5
#define NAVIGATION  6
#define ADJUST  7
#define GAMING  8

// Key position definitions for TOTEM 38-key layout
// These aliases match the physical layout shown above
// Left side: 0 = innermost (closest to center), 4 = outermost
#define LT0  4  // left-top row (innermost)
#define LT1  3
#define LT2  2
#define LT3  1
#define LT4  0  // left-top row (outermost)

#define RT0  5  // right-top row
#define RT1  6
#define RT2  7
#define RT3  8
#define RT4  9

#define LM0  14 // left-middle row (innermost)
#define LM1  13
#define LM2  12
#define LM3  11
#define LM4  10 // left-middle row (outermost)

#define RM0  15 // right-middle row
#define RM1  16
#define RM2  17
#define RM3  18
#define RM4  19

#define LB0  25 // left-bottom row (innermost including outer key)
#define LB1  24
#define LB2  23
#define LB3  22
#define LB4  21
#define LB5  20 // left-bottom row (outermost)

#define RB0  26 // right-bottom row (includes outer key)
#define RB1  27
#define RB2  28
#define RB3  29
#define RB4  30
#define RB5  31

#define LH0  34 // left thumb keys
#define LH1  33
#define LH2  32

#define RH0  35 // right thumb keys
#define RH1  36
#define RH2  37

&mt {
  quick-tap-ms = <100>;
  global-quick-tap;
  flavor = "tap-preferred";
  tapping-term-ms = <170>;
};

/ {
        conditional_layers {
                compatible = "zmk,conditional-layers";
                        tri_layer {
                        if-layers = <NUM_LAYER SYMBOL>;
                        then-layer = <ADJUST>;
                };
        };

        behaviors {
                hml: home_row_mod_left {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOME_ROW_MOD_LEFT";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <280>;
                        quick-tap-ms = <175>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <
                                RT0 RT1 RT2 RT3 RT4      // right top row
                                RM0 RM1 RM2 RM3 RM4      // right middle row
                                RB0 RB1 RB2 RB3 RB4 RB5  // right bottom row
                                RH0 RH1 RH2              // right thumb keys
                        >;
                        hold-trigger-on-release;
                };
                hmr: home_row_mod_right {
                        compatible = "zmk,behavior-hold-tap";
                        label = "HOME_ROW_MOD_RIGHT";
                        #binding-cells = <2>;
                        flavor = "balanced";
                        tapping-term-ms = <280>;
                        quick-tap-ms = <175>;
                        bindings = <&kp>, <&kp>;
                        hold-trigger-key-positions = <
                                LT0 LT1 LT2 LT3 LT4      // left top row
                                LM0 LM1 LM2 LM3 LM4      // left middle row
                                LB0 LB1 LB2 LB3 LB4 LB5  // left bottom row
                                LH0 LH1 LH2              // left thumb keys
                        >;
                        hold-trigger-on-release;
                };
                lt_thumb: layer_tap_thumb {
                        compatible = "zmk,behavior-hold-tap";
                        label = "LAYER_TAP_THUMB";
                        #binding-cells = <2>;
                        tapping-term-ms = <200>;
                        flavor = "balanced";
                        hold-trigger-key-positions = <0 1 2 3 4 5 6 7 8 9 10 11 12 13 14 15 16 17 18 19 20 21 22 23 24 25 26 27 28 29 30 31>;
                        hold-trigger-on-release;
                        retro-tap;
                        global-quick-tap;
                        bindings = <&mo>, <&kp>;
                };
        };

        macros {
                ZMK_MACRO(switch_to_mac, bindings= <&bt BT_SEL 0 &to MAC>;)
                ZMK_MACRO(switch_to_ipad, bindings= <&bt BT_SEL 2 &to MAC>;)
                ZMK_MACRO(switch_to_windows, bindings= <&bt BT_SEL 1 &to WINDOWS>;)
                ZMK_MACRO(toggle_gaming, bindings= <&tog GAMING>;)

                win_app_sw: win_app_sw {
                        label = "WINDOWS_APP_SWITCHER";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LALT>
                                , <&macro_tap &kp TAB>
                                , <&macro_press &mo NAVIGATION>
                                , <&macro_pause_for_release>
                                , <&macro_release &mo NAVIGATION>
                                , <&macro_release &kp LALT>
                                ;
                };     

                mac_app_sw: mac_app_sw {
                        label = "MAC_APP_SWITCHER";
                        compatible = "zmk,behavior-macro";
                        #binding-cells = <0>;
                        bindings
                                = <&macro_press &kp LGUI>
                                , <&macro_tap &kp TAB>
                                , <&macro_press &mo NAVIGATION>
                                , <&macro_pause_for_release>
                                , <&macro_release &mo NAVIGATION>
                                , <&macro_release &kp LGUI>
                                ;
                };  
        };

        combos {
                compatible = "zmk,combos";
                combo_spotlight {         
                        timeout-ms = <50>;
                        key-positions = <LH0 RH0>;
                        bindings = <&kp LG(SPACE)>;
                        layers = <MAC>;
                };

                combo_sticky_shift_mac {
                        timeout-ms = <50>;
                        key-positions = <RT1 RT3>;  // U and O keys
                        bindings = <&sk LSHFT>;
                        layers = <MAC>;
                };

                combo_caps_word_mac {
                        timeout-ms = <50>;
                        key-positions = <RT1 RT2 RT3>;  // U, I, and O keys
                        bindings = <&caps_word>;
                        layers = <MAC>;
                };

                combo_spotlight_windows {         
                        timeout-ms = <50>;
                        key-positions = <LH0 RH0>;
                        bindings = <&kp LA(SPACE)>;
                        layers = <WINDOWS>;
                };

                combo_sticky_shift_windows {
                        timeout-ms = <50>;
                        key-positions = <RT1 RT3>;  // U and O keys
                        bindings = <&sk LSHFT>;
                        layers = <WINDOWS>;
                };

                combo_caps_word_windows {
                        timeout-ms = <50>;
                        key-positions = <RT1 RT2 RT3>;  // U, I, and O keys
                        bindings = <&caps_word>;
                        layers = <WINDOWS>;
                };

                combo_app_switcher_windows {         
                        timeout-ms = <50>;
                        key-positions = <LM4 LM3 LM2 LM1>;
                        bindings = <&win_app_sw>;
                        layers = <WINDOWS>;
                };

                combo_copy_windows {         
                        timeout-ms = <50>;
                        key-positions = <LB3 LB2>;
                        bindings = <&kp LC(C)>;
                        layers = <WINDOWS>;
                };
                combo_paste_windows {         
                        timeout-ms = <50>;
                        key-positions = <LB2 LB1>;
                        bindings = <&kp LC(V)>;
                        layers = <WINDOWS>;
                };
                combo_cut_windows {         
                        timeout-ms = <50>;
                        key-positions = <LB3 LB1>;
                        bindings = <&kp LC(X)>;
                        layers = <WINDOWS>;
                };
                combo_undo_windows {         
                        timeout-ms = <50>;
                        key-positions = <LB4 LB3>;
                        bindings = <&kp LC(Z)>;
                        layers = <WINDOWS>;
                };
                combo_select_windows {         
                        timeout-ms = <50>;
                        key-positions = <LM4 LM1>;
                        bindings = <&kp LC(A)>;
                        layers = <WINDOWS>;
                };
                combo_find_windows {         
                        timeout-ms = <50>;
                        key-positions = <LM2 LM1>;
                        bindings = <&kp LC(F)>;
                        layers = <WINDOWS>;
                };
                combo_close_window_windows {         
                        timeout-ms = <50>;
                        key-positions = <LT3 LT1>;
                        bindings = <&kp LC(W)>;
                        layers = <WINDOWS>;
                };
                
                combo_app_switcher_mac {         
                        timeout-ms = <50>;
                        key-positions = <LM4 LM3 LM2 LM1>;
                        bindings = <&mac_app_sw>;
                        layers = <MAC>;
                };
                
                combo_copy_mac {         
                        timeout-ms = <50>;
                        key-positions = <LB3 LB2>;
                        bindings = <&kp LG(C)>;
                        layers = <MAC>;
                };
                combo_paste_mac {         
                        timeout-ms = <50>;
                        key-positions = <LB2 LB1>;
                        bindings = <&kp LG(V)>;
                        layers = <MAC>;
                };
                combo_cut_mac {         
                        timeout-ms = <50>;
                        key-positions = <LB3 LB1>;
                        bindings = <&kp LG(X)>;
                        layers = <MAC>;
                };
                combo_undo_mac {         
                        timeout-ms = <50>;
                        key-positions = <LB4 LB3>;
                        bindings = <&kp LG(Z)>;
                        layers = <MAC>;
                };
                combo_select_mac {         
                        timeout-ms = <50>;
                        key-positions = <LM4 LM1>;
                        bindings = <&kp LG(A)>;
                        layers = <MAC>;
                };
                combo_find_mac {         
                        timeout-ms = <50>;
                        key-positions = <LM2 LM1>;
                        bindings = <&kp LG(F)>;
                        layers = <MAC>;
                };
                combo_close_window_mac {
                        timeout-ms = <50>;
                        key-positions = <LT3 LT1>;
                        bindings = <&kp LG(W)>;
                        layers = <MAC>;
                };

                combo_toggle_gaming {
                        timeout-ms = <50>;
                        key-positions = <LH2 RH2>;
                        bindings = <&toggle_gaming>;
                        layers = <WINDOWS GAMING>;
                };
        };

        keymap {
                compatible = "zmk,keymap";

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                mac_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "MAC"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃   ┃     Y     ┃     U     ┃     I     ┃     O     ┃     P     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃   GUI/A   ┃   ALT/S   ┃  CTRL/D   ┃  SHFT/F   ┃     G     ┃   ┃     H     ┃  SHFT/J   ┃  CTRL/K   ┃   ALT/L   ┃   GUI/;   ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃    TAB    ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     N     ┃     M     ┃     ,     ┃     .     ┃     /     ┃    SQT    ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃    ESC    ┃ NAV/SPACE ┃ NUM/TAB   ┃   ┃   RET     ┃ SYM/BSPC  ┃    DEL    ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P
                &hml LGUI A &hml LALT S &hml LCTRL D &hml LSHFT F &kp G          &kp H       &hmr RSHFT J &hmr RCTRL K &hmr RALT L &hmr RGUI SEMI
    &kp TAB     &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp SQT
                                        &kp ESC     &lt_thumb NAVIGATION SPACE &lt_thumb NUM_LAYER TAB &kp RET &lt_thumb SYMBOL BSPC &kp DEL
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                mac_bindings_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "MAC BIND"                          ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &trans      &trans      &trans      &trans      &trans          &kp LG(Y)   &trans      &trans      &trans      &trans
                &kp LG(A)   &kp LG(S)   &kp LG(D)   &kp LG(F)   &trans          &trans      &trans      &trans      &trans      &trans
    &trans      &kp LG(Z)   &kp LG(X)   &kp LG(C)   &kp LG(V)   &trans          &trans      &trans      &trans      &trans      &trans      &trans
                                        &trans      &trans      &trans          &trans      &trans      &trans
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                windows_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "WINDOWS"                           ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃   ┃     Y     ┃     U     ┃     I     ┃     O     ┃     P     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃   GUI/A   ┃   ALT/S   ┃  CTRL/D   ┃  SHFT/F   ┃     G     ┃   ┃     H     ┃  SHFT/J   ┃  CTRL/K   ┃   ALT/L   ┃   GUI/;   ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃    TAB    ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     N     ┃     M     ┃     ,     ┃     .     ┃     /     ┃    SQT    ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃    ESC    ┃ NAV/SPACE ┃ NUM/TAB   ┃   ┃   RET     ┃ SYM/BSPC  ┃    DEL    ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P
                &hml LGUI A &hml LALT S &hml LCTRL D &hml LSHFT F &kp G          &kp H       &hmr RSHFT J &hmr RCTRL K &hmr RALT L &hmr RGUI SEMI
    &kp TAB     &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp SQT
                                        &kp ESC     &lt_thumb NAVIGATION SPACE &lt_thumb NUM_LAYER TAB &kp RET &lt_thumb SYMBOL BSPC &kp DEL
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                windows_bindings_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "WIN BIND"                          ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &trans      &trans      &trans      &trans      &trans          &kp LC(Y)   &trans      &trans      &trans      &trans
                &kp LC(A)   &kp LC(S)   &kp LC(D)   &kp LC(F)   &trans          &trans      &trans      &trans      &trans      &trans
    &trans      &kp LC(Z)   &kp LC(X)   &kp LC(C)   &kp LC(V)   &trans          &trans      &trans      &trans      &trans      &trans      &trans
                                        &trans      &trans      &trans          &trans      &trans      &trans
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                num_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "NUM"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     1     ┃     2     ┃     3     ┃     4     ┃     5     ┃   ┃     6     ┃     7     ┃     8     ┃     9     ┃     0     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     F1    ┃     F2    ┃     F3    ┃     F4    ┃     F5    ┃   ┃   TRANS   ┃     4     ┃     5     ┃     6     ┃   TRANS   ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃   TRANS   ┃     F6    ┃     F7    ┃     F8    ┃     F9    ┃    F10    ┃   ┃   TRANS   ┃     1     ┃     2     ┃     3     ┃   TRANS   ┃   TRANS   ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   ┃   TRANS   ┃   TRANS   ┃     0     ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp N1      &kp N2      &kp N3      &kp N4      &kp N5          &kp N6      &kp N7      &kp N8      &kp N9      &kp N0
                &kp F1      &kp F2      &kp F3      &kp F4      &kp F5          &trans      &kp N4      &kp N5      &kp N6      &trans
    &trans      &kp F6      &kp F7      &kp F8      &kp F9      &kp F10         &trans      &kp N1      &kp N2      &kp N3      &trans      &trans
                                        &trans      &trans      &trans          &trans      &trans      &kp N0
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                symbol_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "SYM"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     !     ┃     @     ┃     #     ┃     $     ┃     %     ┃   ┃     ^     ┃     &     ┃     *     ┃     (     ┃     )     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     `     ┃     ~     ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   ┃     -     ┃     =     ┃     [     ┃     ]     ┃     \     ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃   TRANS   ┃     ~     ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   ┃     _     ┃     +     ┃     {     ┃     }     ┃     |     ┃   TRANS   ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃    ESC    ┃   SPACE   ┃    TAB    ┃   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp EXCL    &kp AT      &kp HASH    &kp DLLR    &kp PRCNT       &kp CARET   &kp AMPS    &kp KP_MULTIPLY &kp LPAR    &kp RPAR
                &kp GRAVE   &kp TILDE   &trans      &trans      &trans          &kp MINUS   &kp EQUAL   &kp LBKT    &kp RBKT    &kp BSLH
    &trans      &kp TILDE   &trans      &trans      &trans      &trans          &kp UNDER   &kp PLUS    &kp LBRC    &kp RBRC    &kp PIPE    &trans
                                        &kp ESC     &kp SPACE   &kp TAB         &trans      &trans      &trans
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                navigation_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "NAV"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     1     ┃     2     ┃     3     ┃     4     ┃     5     ┃   ┃     6     ┃     7     ┃     8     ┃     9     ┃     0     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     F1    ┃     F2    ┃     F3    ┃     F4    ┃     F5    ┃   ┃    LEFT   ┃    DOWN   ┃     UP    ┃   RIGHT   ┃   TRANS   ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃   TRANS   ┃     F6    ┃     F7    ┃     F8    ┃     F9    ┃    F10    ┃   ┃    HOME   ┃   PG_DN   ┃   PG_UP   ┃    END    ┃   TRANS   ┃   TRANS   ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   ┃   TRANS   ┃   BSPC    ┃    DEL    ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp N1      &kp N2      &kp N3      &kp N4      &kp N5          &kp N6      &kp N7      &kp N8      &kp N9      &kp N0
                &kp F1      &kp F2      &kp F3      &kp F4      &kp F5          &kp LEFT    &kp DOWN    &kp UP      &kp RIGHT   &trans
    &trans      &kp F6      &kp F7      &kp F8      &kp F9      &kp F10         &kp HOME    &kp PG_DN   &kp PG_UP   &kp END     &trans      &trans
                                        &trans      &trans      &trans          &trans      &kp BSPC    &kp DEL
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                adjust_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "ADJ"                               ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃ TRANS ┃ Studio Unlock   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃  BT MAC   ┃  BT WIN   ┃  BT IPAD  ┃   BT 3    ┃   BT 4    ┃   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃  BT CLR   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃BOOTLOADER ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃   ┃   TRANS   ┃   TRANS   ┃   TRANS   ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &trans      &studio_unlock      &trans      &trans      &trans          &trans      &trans      &trans      &trans      &trans
                &switch_to_mac &switch_to_windows &switch_to_ipad &bt BT_SEL 3 &bt BT_SEL 4 &trans     &trans      &trans      &trans      &trans
    &bt BT_CLR  &trans      &trans      &trans      &trans      &trans          &trans      &trans      &trans      &trans      &trans      &bootloader
                                        &trans      &trans      &trans          &trans      &trans      &trans
                        >;
                };

// ▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄▄

                gaming_layer {
// ┏━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┓
label= "GAMING"                            ;
// ┗━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━━┛
//             ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓   ┏━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┳━━━━━━━━━━━┓
//             ┃     Q     ┃     W     ┃     E     ┃     R     ┃     T     ┃   ┃     Y     ┃     U     ┃     I     ┃     O     ┃     P     ┃
//             ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫
//             ┃     A     ┃     S     ┃     D     ┃     F     ┃     G     ┃   ┃     H     ┃     J     ┃     K     ┃     L     ┃     ;     ┃
// ┏━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┓
// ┃    TAB    ┃     Z     ┃     X     ┃     C     ┃     V     ┃     B     ┃   ┃     N     ┃     M     ┃     ,     ┃     .     ┃     /     ┃    DEL    ┃
// ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┫   ┣━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━╋━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
//                                     ┃    ESC    ┃   SPACE   ┃    TAB    ┃   ┃    RET    ┃   TRANS   ┃   TRANS   ┃
//                                     ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛   ┗━━━━━━━━━━━┻━━━━━━━━━━━┻━━━━━━━━━━━┛
 bindings = <
// ╷           ╷           ╷           ╷           ╷           ╷           ╷   ╷           ╷           ╷           ╷           ╷           ╷           ╷

                &kp Q       &kp W       &kp E       &kp R       &kp T           &kp Y       &kp U       &kp I       &kp O       &kp P
                &kp A       &kp S       &kp D       &kp F       &kp G           &kp H       &kp J       &kp K       &kp L       &kp SEMI
    &kp TAB     &kp Z       &kp X       &kp C       &kp V       &kp B           &kp N       &kp M       &kp COMMA   &kp DOT     &kp FSLH    &kp DEL
                                        &kp ESC     &kp SPACE   &kp TAB         &kp RET     &trans      &trans
                        >;
                };
        };
};
